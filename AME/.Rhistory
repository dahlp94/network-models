q()
mu <- 1
# generate x from mu
n <- 100
x <- rnorm(n, mu=mu)
x <- rnorm(n, mean=mu)
x
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
mu_list <- seq(-2,2, by=0.01)
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
plot(y=lhd_list, x=mu_list, type="l", xlab="mu", ylab="L(mu)")
which.max(lhd_list)
mu_list[which.max(lhd_list)]
# now increase the sample size
n <- 10^3
x <- rnorm(n, mean=mu)
# List of values that I want to guess for the parameter
# i.e. assuming mu is unknown
# make it dense.
mu_list <- seq(-2,2, by=0.01)
# evalue the density at eah individual value of mu
# i.e. we are computing the likelihood
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
which.max(lhd_list)
mu_list[which.max(lhd_list)]
plot(y=lhd_list, x=mu_list, type="l", xlab="mu", ylab="L(mu)")
mle_list <- sapply(1:1000, FUN=function(i) {
x <- rnorm(n, mean=mu)
# List of values that I want to guess for the parameter
# i.e. assuming mu is unknown
# make it dense.
mu_list <- seq(-2,2, by=0.01)
# evalue the density at eah individual value of mu
# i.e. we are computing the likelihood
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
which.max(lhd_list)
mu_list[which.max(lhd_list)]
plot(y=lhd_list, x=mu_list, type="l", xlab="mu", ylab="L(mu)")
} )
example(stan_model, package = "rstan", run.dontrun = TRUE)
library("rstan") # observe startup messages
getwd()
setwd("C:/Users/pd006/Desktop/internship_search/network-models/AME")
matrix_3x3 <- matrix(1:9, nrow = 3, ncol = 3)
m <- matrix(1:9, nrow = 3, ncol = 3)
m
m.tri()
uper.tri(m)
upper.tri(m)
m[upper.tri(m)] <- c(1:3)
m
cbind(c(1,2), c(3,4))
err <- cbind(c(1,2), c(3,4), c(5,6))
err
E <- matrix(rep(NA, each=9), nrow=3)
E
E
E[upper.tri(E)] <- err[1,]
E[lower.tri(E)] <- err[2,]
E
